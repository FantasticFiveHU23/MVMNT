type Category @model @auth(rules: [{allow: public}]) {
  id: ID!
  category_name: String!
  Businesses: [Business] @manyToMany(relationName: "CategoryBusiness")
}

type Business @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  rating: Float
  location: String!
  account: ID
  email: String!
  reviews: [Reviews] @hasMany
  category: String
  username: String!
  bio: String
  categorys: [Category] @manyToMany(relationName: "CategoryBusiness")
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String!
  email: String!
  firstname: String!
  lastname: String!
  reviews: [String]
  Reviews: [Reviews] @hasMany(indexName: "byUser", fields: ["id"])
  Comments: [Comment] @hasMany(indexName: "byUser", fields: ["id"])
}

type Reviews @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String!
  business_review: Business @belongsTo
  review_replies: [Comment] @hasMany(indexName: "byReviews", fields: ["id"])
  content: String!
  datePublished: AWSDateTime
  replies: [ID]
  userID: ID! @index(name: "byUser")
  rating: Float!
}

type Comment @model @auth(rules: [{allow: public}]) {
  id: ID!
  reply: Reviews @belongsTo(fields: ["reviewsID"])
  content: String!
  reviewsID: ID! @index(name: "byReviews")
  datePublished: AWSDateTime!
  userID: ID! @index(name: "byUser")
}
 